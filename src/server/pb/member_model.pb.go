// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: member_model.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type MemberModel struct {
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Email       string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Avatar      string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Cellphone   string `protobuf:"bytes,6,opt,name=cellphone,proto3" json:"cellphone,omitempty"`
	// auth
	UserName string `protobuf:"bytes,11,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Password string `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	Salt     string `protobuf:"bytes,13,opt,name=salt,proto3" json:"salt,omitempty"`
	// permission
	// api_id,
	Permissions map[string]*Permission `protobuf:"bytes,21,rep,name=permissions,proto3" json:"permissions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 3rd accounts
	Wechat string `protobuf:"bytes,31,opt,name=wechat,proto3" json:"wechat,omitempty"`
	Weibo  string `protobuf:"bytes,32,opt,name=weibo,proto3" json:"weibo,omitempty"`
	Qq     string `protobuf:"bytes,33,opt,name=qq,proto3" json:"qq,omitempty"`
}

func (m *MemberModel) Reset()         { *m = MemberModel{} }
func (m *MemberModel) String() string { return proto.CompactTextString(m) }
func (*MemberModel) ProtoMessage()    {}
func (*MemberModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{0}
}
func (m *MemberModel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MemberModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MemberModel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MemberModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberModel.Merge(m, src)
}
func (m *MemberModel) XXX_Size() int {
	return m.Size()
}
func (m *MemberModel) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberModel.DiscardUnknown(m)
}

var xxx_messageInfo_MemberModel proto.InternalMessageInfo

func (m *MemberModel) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MemberModel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MemberModel) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MemberModel) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MemberModel) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *MemberModel) GetCellphone() string {
	if m != nil {
		return m.Cellphone
	}
	return ""
}

func (m *MemberModel) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *MemberModel) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *MemberModel) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *MemberModel) GetPermissions() map[string]*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *MemberModel) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

func (m *MemberModel) GetWeibo() string {
	if m != nil {
		return m.Weibo
	}
	return ""
}

func (m *MemberModel) GetQq() string {
	if m != nil {
		return m.Qq
	}
	return ""
}

type CreateMemberRequest struct {
	Apis []*MemberModel `protobuf:"bytes,1,rep,name=apis,proto3" json:"apis,omitempty"`
}

func (m *CreateMemberRequest) Reset()         { *m = CreateMemberRequest{} }
func (m *CreateMemberRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMemberRequest) ProtoMessage()    {}
func (*CreateMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{1}
}
func (m *CreateMemberRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateMemberRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMemberRequest.Merge(m, src)
}
func (m *CreateMemberRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMemberRequest proto.InternalMessageInfo

func (m *CreateMemberRequest) GetApis() []*MemberModel {
	if m != nil {
		return m.Apis
	}
	return nil
}

type CreateMemberResponse struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (m *CreateMemberResponse) Reset()         { *m = CreateMemberResponse{} }
func (m *CreateMemberResponse) String() string { return proto.CompactTextString(m) }
func (*CreateMemberResponse) ProtoMessage()    {}
func (*CreateMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{2}
}
func (m *CreateMemberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateMemberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMemberResponse.Merge(m, src)
}
func (m *CreateMemberResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMemberResponse proto.InternalMessageInfo

func (m *CreateMemberResponse) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetMemberRequest struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (m *GetMemberRequest) Reset()         { *m = GetMemberRequest{} }
func (m *GetMemberRequest) String() string { return proto.CompactTextString(m) }
func (*GetMemberRequest) ProtoMessage()    {}
func (*GetMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{3}
}
func (m *GetMemberRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMemberRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMemberRequest.Merge(m, src)
}
func (m *GetMemberRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMemberRequest proto.InternalMessageInfo

func (m *GetMemberRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetMemberResponse struct {
	Members []*MemberModel `protobuf:"bytes,1,rep,name=Members,proto3" json:"Members,omitempty"`
}

func (m *GetMemberResponse) Reset()         { *m = GetMemberResponse{} }
func (m *GetMemberResponse) String() string { return proto.CompactTextString(m) }
func (*GetMemberResponse) ProtoMessage()    {}
func (*GetMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{4}
}
func (m *GetMemberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMemberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMemberResponse.Merge(m, src)
}
func (m *GetMemberResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMemberResponse proto.InternalMessageInfo

func (m *GetMemberResponse) GetMembers() []*MemberModel {
	if m != nil {
		return m.Members
	}
	return nil
}

type ListMemberRequest struct {
	Header      int32 `protobuf:"varint,1,opt,name=header,proto3" json:"header,omitempty"`
	CurrentPage int32 `protobuf:"varint,9,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	PageSize    int32 `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (m *ListMemberRequest) Reset()         { *m = ListMemberRequest{} }
func (m *ListMemberRequest) String() string { return proto.CompactTextString(m) }
func (*ListMemberRequest) ProtoMessage()    {}
func (*ListMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{5}
}
func (m *ListMemberRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMemberRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMemberRequest.Merge(m, src)
}
func (m *ListMemberRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMemberRequest proto.InternalMessageInfo

func (m *ListMemberRequest) GetHeader() int32 {
	if m != nil {
		return m.Header
	}
	return 0
}

func (m *ListMemberRequest) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ListMemberRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListMemberResponse struct {
	Headers []*KV          `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Members []*MemberModel `protobuf:"bytes,2,rep,name=Members,proto3" json:"Members,omitempty"`
}

func (m *ListMemberResponse) Reset()         { *m = ListMemberResponse{} }
func (m *ListMemberResponse) String() string { return proto.CompactTextString(m) }
func (*ListMemberResponse) ProtoMessage()    {}
func (*ListMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{6}
}
func (m *ListMemberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMemberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMemberResponse.Merge(m, src)
}
func (m *ListMemberResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMemberResponse proto.InternalMessageInfo

func (m *ListMemberResponse) GetHeaders() []*KV {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *ListMemberResponse) GetMembers() []*MemberModel {
	if m != nil {
		return m.Members
	}
	return nil
}

type UpdateMemberRequest struct {
	Members []*MemberModel `protobuf:"bytes,1,rep,name=Members,proto3" json:"Members,omitempty"`
}

func (m *UpdateMemberRequest) Reset()         { *m = UpdateMemberRequest{} }
func (m *UpdateMemberRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateMemberRequest) ProtoMessage()    {}
func (*UpdateMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{7}
}
func (m *UpdateMemberRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateMemberRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMemberRequest.Merge(m, src)
}
func (m *UpdateMemberRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMemberRequest proto.InternalMessageInfo

func (m *UpdateMemberRequest) GetMembers() []*MemberModel {
	if m != nil {
		return m.Members
	}
	return nil
}

type DeleteMemberRequest struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (m *DeleteMemberRequest) Reset()         { *m = DeleteMemberRequest{} }
func (m *DeleteMemberRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMemberRequest) ProtoMessage()    {}
func (*DeleteMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_744f47a3e5a695d0, []int{8}
}
func (m *DeleteMemberRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteMemberRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMemberRequest.Merge(m, src)
}
func (m *DeleteMemberRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMemberRequest proto.InternalMessageInfo

func (m *DeleteMemberRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*MemberModel)(nil), "pb.MemberModel")
	proto.RegisterMapType((map[string]*Permission)(nil), "pb.MemberModel.PermissionsEntry")
	proto.RegisterType((*CreateMemberRequest)(nil), "pb.CreateMemberRequest")
	proto.RegisterType((*CreateMemberResponse)(nil), "pb.CreateMemberResponse")
	proto.RegisterType((*GetMemberRequest)(nil), "pb.GetMemberRequest")
	proto.RegisterType((*GetMemberResponse)(nil), "pb.GetMemberResponse")
	proto.RegisterType((*ListMemberRequest)(nil), "pb.ListMemberRequest")
	proto.RegisterType((*ListMemberResponse)(nil), "pb.ListMemberResponse")
	proto.RegisterType((*UpdateMemberRequest)(nil), "pb.UpdateMemberRequest")
	proto.RegisterType((*DeleteMemberRequest)(nil), "pb.DeleteMemberRequest")
}

func init() { proto.RegisterFile("member_model.proto", fileDescriptor_744f47a3e5a695d0) }

var fileDescriptor_744f47a3e5a695d0 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0x8d, 0x9d, 0x3f, 0x4d, 0xc6, 0xf9, 0xf5, 0x97, 0x6e, 0x4a, 0xb4, 0x0a, 0xc8, 0xb8, 0xa6,
	0x12, 0xe1, 0x92, 0x43, 0xb9, 0xa0, 0x1e, 0x10, 0x2a, 0x20, 0x0e, 0xd0, 0xaa, 0x32, 0x82, 0x6b,
	0xb4, 0x89, 0x47, 0xcd, 0xaa, 0xfe, 0x97, 0x5d, 0xa7, 0x51, 0xfb, 0x29, 0xf8, 0x44, 0x9c, 0x39,
	0xf6, 0xc8, 0x11, 0x25, 0x5f, 0x04, 0xed, 0xae, 0xa3, 0xb8, 0x89, 0x10, 0xe2, 0x36, 0xf3, 0xde,
	0xcc, 0xec, 0x7b, 0x2f, 0x31, 0x90, 0x18, 0xe3, 0x31, 0x8a, 0x51, 0x9c, 0x86, 0x18, 0x0d, 0x33,
	0x91, 0xe6, 0x29, 0xb1, 0xb3, 0x71, 0xbf, 0x3d, 0x49, 0xe3, 0x38, 0x4d, 0x0c, 0xd2, 0xef, 0x65,
	0x28, 0x62, 0x2e, 0x25, 0x4f, 0x93, 0xf2, 0xa4, 0xff, 0xbd, 0x0a, 0xce, 0xb9, 0x3e, 0x70, 0xae,
	0x50, 0xb2, 0x0f, 0x36, 0x0f, 0xa9, 0xe5, 0x59, 0x83, 0x56, 0x60, 0xf3, 0x90, 0x10, 0xa8, 0x25,
	0x2c, 0x46, 0x6a, 0x6b, 0x44, 0xd7, 0xc4, 0x03, 0x27, 0x44, 0x39, 0x11, 0x3c, 0xcb, 0x79, 0x9a,
	0xd0, 0xaa, 0xa6, 0xca, 0x10, 0x39, 0x84, 0x3a, 0xc6, 0x8c, 0x47, 0xb4, 0xa6, 0x39, 0xd3, 0x90,
	0x1e, 0x34, 0xd8, 0x0d, 0xcb, 0x99, 0xa0, 0x75, 0x0d, 0x17, 0x1d, 0x79, 0x02, 0xad, 0x09, 0x46,
	0x51, 0x36, 0x4d, 0x13, 0xa4, 0x0d, 0x4d, 0x6d, 0x00, 0xf2, 0x18, 0x5a, 0x73, 0x89, 0x62, 0xa4,
	0x65, 0x38, 0x9a, 0x6d, 0x2a, 0xe0, 0x42, 0x49, 0xe9, 0x43, 0x33, 0x63, 0x52, 0x2e, 0x52, 0x11,
	0xd2, 0xb6, 0xe1, 0xd6, 0xbd, 0x92, 0x2e, 0x59, 0x94, 0xd3, 0xff, 0x8c, 0x74, 0x55, 0x93, 0x33,
	0x70, 0x36, 0x41, 0x48, 0xfa, 0xc8, 0xab, 0x0e, 0x9c, 0x13, 0x6f, 0x98, 0x8d, 0x87, 0xa5, 0x10,
	0x86, 0x97, 0x9b, 0x91, 0xf7, 0x49, 0x2e, 0x6e, 0x83, 0xf2, 0x92, 0xb2, 0xb1, 0xc0, 0xc9, 0x94,
	0xe5, 0xf4, 0xa9, 0xb1, 0x61, 0x3a, 0x65, 0x7a, 0x81, 0x7c, 0x9c, 0x52, 0xcf, 0x98, 0xd6, 0x8d,
	0x0a, 0x74, 0x36, 0xa3, 0x47, 0x26, 0xd0, 0xd9, 0xac, 0x7f, 0x01, 0x9d, 0xed, 0xf3, 0xa4, 0x03,
	0xd5, 0x6b, 0xbc, 0x2d, 0x52, 0x57, 0x25, 0x39, 0x86, 0xfa, 0x0d, 0x8b, 0xe6, 0x26, 0x77, 0xe7,
	0x64, 0x5f, 0x29, 0xdc, 0xac, 0x05, 0x86, 0x3c, 0xb5, 0x5f, 0x59, 0xfe, 0x29, 0x74, 0xdf, 0x0a,
	0x64, 0x39, 0x1a, 0x03, 0x01, 0xce, 0xe6, 0x28, 0x73, 0xf2, 0x0c, 0x6a, 0x2c, 0xe3, 0x92, 0x5a,
	0xda, 0xe1, 0xff, 0x5b, 0x0e, 0x03, 0x4d, 0xfa, 0x03, 0x38, 0x7c, 0xb8, 0x2b, 0xb3, 0x34, 0x91,
	0xa8, 0xf4, 0xf0, 0xd0, 0xec, 0xb6, 0x02, 0x55, 0xfa, 0xc7, 0xd0, 0xf9, 0x80, 0xf9, 0xc3, 0x27,
	0x76, 0xa7, 0x5e, 0xc3, 0x41, 0x69, 0xaa, 0x38, 0xf6, 0x02, 0xf6, 0x0c, 0xf2, 0x47, 0x31, 0x6b,
	0xde, 0xbf, 0x86, 0x83, 0x4f, 0x5c, 0x6e, 0x3d, 0xd3, 0x83, 0xc6, 0x14, 0x59, 0x88, 0x42, 0xe7,
	0x53, 0x0f, 0x8a, 0x8e, 0x1c, 0x41, 0x7b, 0x32, 0x17, 0x02, 0x93, 0x7c, 0x94, 0xb1, 0x2b, 0xa4,
	0x2d, 0xcd, 0x3a, 0x05, 0x76, 0xc9, 0xae, 0xf4, 0x5f, 0x47, 0x51, 0x23, 0xc9, 0xef, 0x90, 0x82,
	0xe6, 0x9b, 0x0a, 0xf8, 0xcc, 0xef, 0xd0, 0x67, 0x40, 0xca, 0x8f, 0x15, 0x6a, 0x3d, 0xd8, 0x33,
	0xf7, 0xd7, 0x6a, 0x1b, 0x4a, 0xed, 0xc7, 0xaf, 0xc1, 0x1a, 0x2e, 0xfb, 0xb1, 0xff, 0xe2, 0xe7,
	0x0d, 0x74, 0xbf, 0x64, 0xe1, 0xce, 0x6f, 0xf3, 0x0f, 0x89, 0x3c, 0x87, 0xee, 0x3b, 0x8c, 0x70,
	0xfb, 0xc2, 0x4e, 0xf4, 0x67, 0xf4, 0xc7, 0xd2, 0xb5, 0xee, 0x97, 0xae, 0xf5, 0x6b, 0xe9, 0x5a,
	0xdf, 0x56, 0x6e, 0xe5, 0x7e, 0xe5, 0x56, 0x7e, 0xae, 0xdc, 0xca, 0xb8, 0xa1, 0x3f, 0xf4, 0x97,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x55, 0xc0, 0x2a, 0xaa, 0x28, 0x04, 0x00, 0x00,
}

func (m *MemberModel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MemberModel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Avatar) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Avatar)))
		i += copy(dAtA[i:], m.Avatar)
	}
	if len(m.Cellphone) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Cellphone)))
		i += copy(dAtA[i:], m.Cellphone)
	}
	if len(m.UserName) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.UserName)))
		i += copy(dAtA[i:], m.UserName)
	}
	if len(m.Password) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Password)))
		i += copy(dAtA[i:], m.Password)
	}
	if len(m.Salt) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Salt)))
		i += copy(dAtA[i:], m.Salt)
	}
	if len(m.Permissions) > 0 {
		for k, _ := range m.Permissions {
			dAtA[i] = 0xaa
			i++
			dAtA[i] = 0x1
			i++
			v := m.Permissions[k]
			msgSize := 0
			if v != nil {
				msgSize = v.Size()
				msgSize += 1 + sovMemberModel(uint64(msgSize))
			}
			mapSize := 1 + len(k) + sovMemberModel(uint64(len(k))) + msgSize
			i = encodeVarintMemberModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintMemberModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			if v != nil {
				dAtA[i] = 0x12
				i++
				i = encodeVarintMemberModel(dAtA, i, uint64(v.Size()))
				n1, err1 := v.MarshalTo(dAtA[i:])
				if err1 != nil {
					return 0, err1
				}
				i += n1
			}
		}
	}
	if len(m.Wechat) > 0 {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Wechat)))
		i += copy(dAtA[i:], m.Wechat)
	}
	if len(m.Weibo) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Weibo)))
		i += copy(dAtA[i:], m.Weibo)
	}
	if len(m.Qq) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(len(m.Qq)))
		i += copy(dAtA[i:], m.Qq)
	}
	return i, nil
}

func (m *CreateMemberRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateMemberRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Apis) > 0 {
		for _, msg := range m.Apis {
			dAtA[i] = 0xa
			i++
			i = encodeVarintMemberModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *CreateMemberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateMemberResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Ids) > 0 {
		for _, s := range m.Ids {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	return i, nil
}

func (m *GetMemberRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMemberRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Ids) > 0 {
		for _, s := range m.Ids {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	return i, nil
}

func (m *GetMemberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMemberResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Members) > 0 {
		for _, msg := range m.Members {
			dAtA[i] = 0xa
			i++
			i = encodeVarintMemberModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *ListMemberRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMemberRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Header != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(m.Header))
	}
	if m.CurrentPage != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(m.CurrentPage))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMemberModel(dAtA, i, uint64(m.PageSize))
	}
	return i, nil
}

func (m *ListMemberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMemberResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Headers) > 0 {
		for _, msg := range m.Headers {
			dAtA[i] = 0xa
			i++
			i = encodeVarintMemberModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Members) > 0 {
		for _, msg := range m.Members {
			dAtA[i] = 0x12
			i++
			i = encodeVarintMemberModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *UpdateMemberRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateMemberRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Members) > 0 {
		for _, msg := range m.Members {
			dAtA[i] = 0xa
			i++
			i = encodeVarintMemberModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *DeleteMemberRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteMemberRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Ids) > 0 {
		for _, s := range m.Ids {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	return i, nil
}

func encodeVarintMemberModel(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *MemberModel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Cellphone)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Salt)
	if l > 0 {
		n += 1 + l + sovMemberModel(uint64(l))
	}
	if len(m.Permissions) > 0 {
		for k, v := range m.Permissions {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovMemberModel(uint64(l))
			}
			mapEntrySize := 1 + len(k) + sovMemberModel(uint64(len(k))) + l
			n += mapEntrySize + 2 + sovMemberModel(uint64(mapEntrySize))
		}
	}
	l = len(m.Wechat)
	if l > 0 {
		n += 2 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Weibo)
	if l > 0 {
		n += 2 + l + sovMemberModel(uint64(l))
	}
	l = len(m.Qq)
	if l > 0 {
		n += 2 + l + sovMemberModel(uint64(l))
	}
	return n
}

func (m *CreateMemberRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Apis) > 0 {
		for _, e := range m.Apis {
			l = e.Size()
			n += 1 + l + sovMemberModel(uint64(l))
		}
	}
	return n
}

func (m *CreateMemberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ids) > 0 {
		for _, s := range m.Ids {
			l = len(s)
			n += 1 + l + sovMemberModel(uint64(l))
		}
	}
	return n
}

func (m *GetMemberRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ids) > 0 {
		for _, s := range m.Ids {
			l = len(s)
			n += 1 + l + sovMemberModel(uint64(l))
		}
	}
	return n
}

func (m *GetMemberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Members) > 0 {
		for _, e := range m.Members {
			l = e.Size()
			n += 1 + l + sovMemberModel(uint64(l))
		}
	}
	return n
}

func (m *ListMemberRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Header != 0 {
		n += 1 + sovMemberModel(uint64(m.Header))
	}
	if m.CurrentPage != 0 {
		n += 1 + sovMemberModel(uint64(m.CurrentPage))
	}
	if m.PageSize != 0 {
		n += 1 + sovMemberModel(uint64(m.PageSize))
	}
	return n
}

func (m *ListMemberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Headers) > 0 {
		for _, e := range m.Headers {
			l = e.Size()
			n += 1 + l + sovMemberModel(uint64(l))
		}
	}
	if len(m.Members) > 0 {
		for _, e := range m.Members {
			l = e.Size()
			n += 1 + l + sovMemberModel(uint64(l))
		}
	}
	return n
}

func (m *UpdateMemberRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Members) > 0 {
		for _, e := range m.Members {
			l = e.Size()
			n += 1 + l + sovMemberModel(uint64(l))
		}
	}
	return n
}

func (m *DeleteMemberRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ids) > 0 {
		for _, s := range m.Ids {
			l = len(s)
			n += 1 + l + sovMemberModel(uint64(l))
		}
	}
	return n
}

func sovMemberModel(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMemberModel(x uint64) (n int) {
	return sovMemberModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MemberModel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MemberModel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MemberModel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cellphone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cellphone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Salt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Salt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Permissions == nil {
				m.Permissions = make(map[string]*Permission)
			}
			var mapkey string
			var mapvalue *Permission
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMemberModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMemberModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthMemberModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthMemberModel
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMemberModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthMemberModel
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthMemberModel
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &Permission{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipMemberModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthMemberModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Permissions[mapkey] = mapvalue
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wechat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wechat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weibo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Weibo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qq", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Qq = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateMemberRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateMemberRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateMemberRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Apis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Apis = append(m.Apis, &MemberModel{})
			if err := m.Apis[len(m.Apis)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateMemberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateMemberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateMemberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ids = append(m.Ids, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMemberRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMemberRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMemberRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ids = append(m.Ids, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMemberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMemberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMemberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, &MemberModel{})
			if err := m.Members[len(m.Members)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMemberRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMemberRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMemberRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			m.Header = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Header |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentPage", wireType)
			}
			m.CurrentPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentPage |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMemberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMemberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMemberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Headers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Headers = append(m.Headers, &KV{})
			if err := m.Headers[len(m.Headers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, &MemberModel{})
			if err := m.Members[len(m.Members)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateMemberRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateMemberRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateMemberRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, &MemberModel{})
			if err := m.Members[len(m.Members)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteMemberRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteMemberRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteMemberRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMemberModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMemberModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ids = append(m.Ids, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMemberModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMemberModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMemberModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMemberModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMemberModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMemberModel
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthMemberModel
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowMemberModel
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipMemberModel(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthMemberModel
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthMemberModel = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMemberModel   = fmt.Errorf("proto: integer overflow")
)
